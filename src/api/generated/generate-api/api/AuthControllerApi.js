/**
 * SWD_392 Auction API
 * API documentation of SWD_392 Auction v1.0.0
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import BaseResponseUserDetails from '../model/BaseResponseUserDetails';
import ErrorResponse from '../model/ErrorResponse';
import RegisterUserRequest from '../model/RegisterUserRequest';

/**
* AuthController service.
* @module api/AuthControllerApi
* @version 1.0.0
*/
export default class AuthControllerApi {

    /**
    * Constructs a new AuthControllerApi. 
    * @alias module:api/AuthControllerApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the authControllerRegister operation.
     * @callback module:api/AuthControllerApi~authControllerRegisterCallback
     * @param {String} error Error message, if any.
     * @param {module:model/BaseResponseUserDetails} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {module:model/RegisterUserRequest} registerUserRequest 
     * @param {module:api/AuthControllerApi~authControllerRegisterCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/BaseResponseUserDetails}
     */
    authControllerRegister(registerUserRequest, callback) {
      let postBody = registerUserRequest;
      // verify the required parameter 'registerUserRequest' is set
      if (registerUserRequest === undefined || registerUserRequest === null) {
        throw new Error("Missing the required parameter 'registerUserRequest' when calling authControllerRegister");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Authorization'];
      let contentTypes = ['application/json'];
      let accepts = ['*/*'];
      let returnType = BaseResponseUserDetails;
      return this.apiClient.callApi(
        '/api/v1/auth/register', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
