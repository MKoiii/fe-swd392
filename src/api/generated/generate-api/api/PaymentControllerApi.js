/**
 * SWD_392 Auction API
 * API documentation of SWD_392 Auction v1.0.0
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import ErrorResponse from '../model/ErrorResponse';

/**
* PaymentController service.
* @module api/PaymentControllerApi
* @version 1.0.0
*/
export default class PaymentControllerApi {

    /**
    * Constructs a new PaymentControllerApi. 
    * @alias module:api/PaymentControllerApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the paymentControllerConfirmCheckedOut operation.
     * @callback module:api/PaymentControllerApi~paymentControllerConfirmCheckedOutCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {String} action 
     * @param {String} paymentId 
     * @param {Object} opts Optional parameters
     * @param {String} [token] 
     * @param {String} [payerId] 
     * @param {module:api/PaymentControllerApi~paymentControllerConfirmCheckedOutCallback} callback The callback function, accepting three arguments: error, data, response
     */
    paymentControllerConfirmCheckedOut(action, paymentId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'action' is set
      if (action === undefined || action === null) {
        throw new Error("Missing the required parameter 'action' when calling paymentControllerConfirmCheckedOut");
      }
      // verify the required parameter 'paymentId' is set
      if (paymentId === undefined || paymentId === null) {
        throw new Error("Missing the required parameter 'paymentId' when calling paymentControllerConfirmCheckedOut");
      }

      let pathParams = {
        'action': action,
        'paymentId': paymentId
      };
      let queryParams = {
        'token': opts['token'],
        'PayerId': opts['payerId']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Authorization'];
      let contentTypes = [];
      let accepts = ['*/*'];
      let returnType = null;
      return this.apiClient.callApi(
        '/api/v1/payment/checkout/{action}/{paymentId}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
