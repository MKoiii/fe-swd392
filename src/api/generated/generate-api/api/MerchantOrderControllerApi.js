/**
 * SWD_392 Auction API
 * API documentation of SWD_392 Auction v1.0.0
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import BasePagingResponseOrderInfoInfo from '../model/BasePagingResponseOrderInfoInfo';
import BaseResponseIBusinessPerformanceProjection from '../model/BaseResponseIBusinessPerformanceProjection';
import BaseResponseListIRevenueThisAndLastMonthProjection from '../model/BaseResponseListIRevenueThisAndLastMonthProjection';
import BaseResponseOrderDetailsDetails from '../model/BaseResponseOrderDetailsDetails';
import ChangeOrderStatusRequest from '../model/ChangeOrderStatusRequest';
import ErrorResponse from '../model/ErrorResponse';
import SuccessResponse from '../model/SuccessResponse';

/**
* MerchantOrderController service.
* @module api/MerchantOrderControllerApi
* @version 1.0.0
*/
export default class MerchantOrderControllerApi {

    /**
    * Constructs a new MerchantOrderControllerApi. 
    * @alias module:api/MerchantOrderControllerApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the merchantOrderControllerBusinessPerformance operation.
     * @callback module:api/MerchantOrderControllerApi~merchantOrderControllerBusinessPerformanceCallback
     * @param {String} error Error message, if any.
     * @param {module:model/BaseResponseIBusinessPerformanceProjection} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {Object} opts Optional parameters
     * @param {Date} [date] 
     * @param {module:api/MerchantOrderControllerApi~merchantOrderControllerBusinessPerformanceCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/BaseResponseIBusinessPerformanceProjection}
     */
    merchantOrderControllerBusinessPerformance(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'date': opts['date']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Authorization'];
      let contentTypes = [];
      let accepts = ['*/*'];
      let returnType = BaseResponseIBusinessPerformanceProjection;
      return this.apiClient.callApi(
        '/api/v1/merchant/order/business-performance', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the merchantOrderControllerChangeStatus operation.
     * @callback module:api/MerchantOrderControllerApi~merchantOrderControllerChangeStatusCallback
     * @param {String} error Error message, if any.
     * @param {module:model/SuccessResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {module:model/ChangeOrderStatusRequest} changeOrderStatusRequest 
     * @param {module:api/MerchantOrderControllerApi~merchantOrderControllerChangeStatusCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/SuccessResponse}
     */
    merchantOrderControllerChangeStatus(changeOrderStatusRequest, callback) {
      let postBody = changeOrderStatusRequest;
      // verify the required parameter 'changeOrderStatusRequest' is set
      if (changeOrderStatusRequest === undefined || changeOrderStatusRequest === null) {
        throw new Error("Missing the required parameter 'changeOrderStatusRequest' when calling merchantOrderControllerChangeStatus");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Authorization'];
      let contentTypes = ['application/json'];
      let accepts = ['*/*'];
      let returnType = SuccessResponse;
      return this.apiClient.callApi(
        '/api/v1/merchant/order/change-status', 'PATCH',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the merchantOrderControllerGetDetailsById operation.
     * @callback module:api/MerchantOrderControllerApi~merchantOrderControllerGetDetailsByIdCallback
     * @param {String} error Error message, if any.
     * @param {module:model/BaseResponseOrderDetailsDetails} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {String} id 
     * @param {module:api/MerchantOrderControllerApi~merchantOrderControllerGetDetailsByIdCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/BaseResponseOrderDetailsDetails}
     */
    merchantOrderControllerGetDetailsById(id, callback) {
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling merchantOrderControllerGetDetailsById");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Authorization'];
      let contentTypes = [];
      let accepts = ['*/*'];
      let returnType = BaseResponseOrderDetailsDetails;
      return this.apiClient.callApi(
        '/api/v1/merchant/order/{id}/details', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the merchantOrderControllerGetInfoPageWithFilter operation.
     * @callback module:api/MerchantOrderControllerApi~merchantOrderControllerGetInfoPageWithFilterCallback
     * @param {String} error Error message, if any.
     * @param {module:model/BasePagingResponseOrderInfoInfo} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {Object} opts Optional parameters
     * @param {String} [id] 
     * @param {module:model/String} [status] 
     * @param {String} [receiverFullName] 
     * @param {String} [phone] 
     * @param {module:model/String} [paymentMethod] 
     * @param {Number} [page = 0)] Zero-based page index (0..N)
     * @param {Number} [size = 20)] The size of the page to be returned
     * @param {Array.<String>} [sort] Sorting criteria in the format: property,(asc|desc). Default sort order is ascending. Multiple sort criteria are supported.
     * @param {module:api/MerchantOrderControllerApi~merchantOrderControllerGetInfoPageWithFilterCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/BasePagingResponseOrderInfoInfo}
     */
    merchantOrderControllerGetInfoPageWithFilter(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'id': opts['id'],
        'status': opts['status'],
        'receiverFullName': opts['receiverFullName'],
        'phone': opts['phone'],
        'paymentMethod': opts['paymentMethod'],
        'page': opts['page'],
        'size': opts['size'],
        'sort': this.apiClient.buildCollectionParam(opts['sort'], 'multi')
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Authorization'];
      let contentTypes = [];
      let accepts = ['*/*'];
      let returnType = BasePagingResponseOrderInfoInfo;
      return this.apiClient.callApi(
        '/api/v1/merchant/order/info/page/filter', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the merchantOrderControllerRevenueByThisAndLastMonth operation.
     * @callback module:api/MerchantOrderControllerApi~merchantOrderControllerRevenueByThisAndLastMonthCallback
     * @param {String} error Error message, if any.
     * @param {module:model/BaseResponseListIRevenueThisAndLastMonthProjection} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {module:api/MerchantOrderControllerApi~merchantOrderControllerRevenueByThisAndLastMonthCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/BaseResponseListIRevenueThisAndLastMonthProjection}
     */
    merchantOrderControllerRevenueByThisAndLastMonth(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Authorization'];
      let contentTypes = [];
      let accepts = ['*/*'];
      let returnType = BaseResponseListIRevenueThisAndLastMonthProjection;
      return this.apiClient.callApi(
        '/api/v1/merchant/order/revenue-by-month', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
