/**
 * SWD_392 Auction API
 * API documentation of SWD_392 Auction v1.0.0
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import AppChangeStatusMerchantRequest from '../model/AppChangeStatusMerchantRequest';
import AppCreateMerchantRequestCreate from '../model/AppCreateMerchantRequestCreate';
import AppUpdateMerchantRequestUpdate from '../model/AppUpdateMerchantRequestUpdate';
import BaseResponseMerchantDetails from '../model/BaseResponseMerchantDetails';
import BaseResponseMerchantDetailsDetails from '../model/BaseResponseMerchantDetailsDetails';
import BaseResponseMerchantInfoInfo from '../model/BaseResponseMerchantInfoInfo';
import ErrorResponse from '../model/ErrorResponse';
import SuccessResponse from '../model/SuccessResponse';

/**
* AppMerchantController service.
* @module api/AppMerchantControllerApi
* @version 1.0.0
*/
export default class AppMerchantControllerApi {

    /**
    * Constructs a new AppMerchantControllerApi. 
    * @alias module:api/AppMerchantControllerApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the appMerchantControllerChangeStatus operation.
     * @callback module:api/AppMerchantControllerApi~appMerchantControllerChangeStatusCallback
     * @param {String} error Error message, if any.
     * @param {module:model/SuccessResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {module:model/AppChangeStatusMerchantRequest} appChangeStatusMerchantRequest 
     * @param {module:api/AppMerchantControllerApi~appMerchantControllerChangeStatusCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/SuccessResponse}
     */
    appMerchantControllerChangeStatus(appChangeStatusMerchantRequest, callback) {
      let postBody = appChangeStatusMerchantRequest;
      // verify the required parameter 'appChangeStatusMerchantRequest' is set
      if (appChangeStatusMerchantRequest === undefined || appChangeStatusMerchantRequest === null) {
        throw new Error("Missing the required parameter 'appChangeStatusMerchantRequest' when calling appMerchantControllerChangeStatus");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Authorization'];
      let contentTypes = ['application/json'];
      let accepts = ['*/*'];
      let returnType = SuccessResponse;
      return this.apiClient.callApi(
        '/api/v1/app/merchant/change-status', 'PATCH',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the appMerchantControllerCreateModel operation.
     * @callback module:api/AppMerchantControllerApi~appMerchantControllerCreateModelCallback
     * @param {String} error Error message, if any.
     * @param {module:model/BaseResponseMerchantDetailsDetails} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {module:model/AppCreateMerchantRequestCreate} appCreateMerchantRequestCreate 
     * @param {module:api/AppMerchantControllerApi~appMerchantControllerCreateModelCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/BaseResponseMerchantDetailsDetails}
     */
    appMerchantControllerCreateModel(appCreateMerchantRequestCreate, callback) {
      let postBody = appCreateMerchantRequestCreate;
      // verify the required parameter 'appCreateMerchantRequestCreate' is set
      if (appCreateMerchantRequestCreate === undefined || appCreateMerchantRequestCreate === null) {
        throw new Error("Missing the required parameter 'appCreateMerchantRequestCreate' when calling appMerchantControllerCreateModel");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Authorization'];
      let contentTypes = ['application/json'];
      let accepts = ['*/*'];
      let returnType = BaseResponseMerchantDetailsDetails;
      return this.apiClient.callApi(
        '/api/v1/app/merchant/draft/save', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the appMerchantControllerGetDetailsByContext operation.
     * @callback module:api/AppMerchantControllerApi~appMerchantControllerGetDetailsByContextCallback
     * @param {String} error Error message, if any.
     * @param {module:model/BaseResponseMerchantDetails} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {module:api/AppMerchantControllerApi~appMerchantControllerGetDetailsByContextCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/BaseResponseMerchantDetails}
     */
    appMerchantControllerGetDetailsByContext(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Authorization'];
      let contentTypes = [];
      let accepts = ['*/*'];
      let returnType = BaseResponseMerchantDetails;
      return this.apiClient.callApi(
        '/api/v1/app/merchant/details/context', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the appMerchantControllerGetInfoById operation.
     * @callback module:api/AppMerchantControllerApi~appMerchantControllerGetInfoByIdCallback
     * @param {String} error Error message, if any.
     * @param {module:model/BaseResponseMerchantInfoInfo} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {Number} id 
     * @param {module:api/AppMerchantControllerApi~appMerchantControllerGetInfoByIdCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/BaseResponseMerchantInfoInfo}
     */
    appMerchantControllerGetInfoById(id, callback) {
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling appMerchantControllerGetInfoById");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Authorization'];
      let contentTypes = [];
      let accepts = ['*/*'];
      let returnType = BaseResponseMerchantInfoInfo;
      return this.apiClient.callApi(
        '/api/v1/app/merchant/public/{id}/info', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the appMerchantControllerSubmitDraft operation.
     * @callback module:api/AppMerchantControllerApi~appMerchantControllerSubmitDraftCallback
     * @param {String} error Error message, if any.
     * @param {module:model/SuccessResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {module:api/AppMerchantControllerApi~appMerchantControllerSubmitDraftCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/SuccessResponse}
     */
    appMerchantControllerSubmitDraft(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Authorization'];
      let contentTypes = [];
      let accepts = ['*/*'];
      let returnType = SuccessResponse;
      return this.apiClient.callApi(
        '/api/v1/app/merchant/draft/submit', 'PATCH',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the appMerchantControllerUpdateModel operation.
     * @callback module:api/AppMerchantControllerApi~appMerchantControllerUpdateModelCallback
     * @param {String} error Error message, if any.
     * @param {module:model/BaseResponseMerchantDetailsDetails} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {module:model/AppUpdateMerchantRequestUpdate} appUpdateMerchantRequestUpdate 
     * @param {module:api/AppMerchantControllerApi~appMerchantControllerUpdateModelCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/BaseResponseMerchantDetailsDetails}
     */
    appMerchantControllerUpdateModel(appUpdateMerchantRequestUpdate, callback) {
      let postBody = appUpdateMerchantRequestUpdate;
      // verify the required parameter 'appUpdateMerchantRequestUpdate' is set
      if (appUpdateMerchantRequestUpdate === undefined || appUpdateMerchantRequestUpdate === null) {
        throw new Error("Missing the required parameter 'appUpdateMerchantRequestUpdate' when calling appMerchantControllerUpdateModel");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Authorization'];
      let contentTypes = ['application/json'];
      let accepts = ['*/*'];
      let returnType = BaseResponseMerchantDetailsDetails;
      return this.apiClient.callApi(
        '/api/v1/app/merchant/update', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
