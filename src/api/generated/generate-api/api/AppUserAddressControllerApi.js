/**
 * SWD_392 Auction API
 * API documentation of SWD_392 Auction v1.0.0
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import BaseResponseListUserAddressInfoInfo from '../model/BaseResponseListUserAddressInfoInfo';
import BaseResponseUserAddressInfoDetails from '../model/BaseResponseUserAddressInfoDetails';
import CreateUserAddressRequestCreate from '../model/CreateUserAddressRequestCreate';
import ErrorResponse from '../model/ErrorResponse';
import SuccessResponse from '../model/SuccessResponse';
import UpdateUserAddressRequestUpdate from '../model/UpdateUserAddressRequestUpdate';

/**
* AppUserAddressController service.
* @module api/AppUserAddressControllerApi
* @version 1.0.0
*/
export default class AppUserAddressControllerApi {

    /**
    * Constructs a new AppUserAddressControllerApi. 
    * @alias module:api/AppUserAddressControllerApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the appUserAddressControllerChangeDefault operation.
     * @callback module:api/AppUserAddressControllerApi~appUserAddressControllerChangeDefaultCallback
     * @param {String} error Error message, if any.
     * @param {module:model/SuccessResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {Number} id 
     * @param {module:api/AppUserAddressControllerApi~appUserAddressControllerChangeDefaultCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/SuccessResponse}
     */
    appUserAddressControllerChangeDefault(id, callback) {
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling appUserAddressControllerChangeDefault");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Authorization'];
      let contentTypes = [];
      let accepts = ['*/*'];
      let returnType = SuccessResponse;
      return this.apiClient.callApi(
        '/api/v1/app/user-address/default/{id}', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the appUserAddressControllerCreateModel operation.
     * @callback module:api/AppUserAddressControllerApi~appUserAddressControllerCreateModelCallback
     * @param {String} error Error message, if any.
     * @param {module:model/BaseResponseUserAddressInfoDetails} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {module:model/CreateUserAddressRequestCreate} createUserAddressRequestCreate 
     * @param {module:api/AppUserAddressControllerApi~appUserAddressControllerCreateModelCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/BaseResponseUserAddressInfoDetails}
     */
    appUserAddressControllerCreateModel(createUserAddressRequestCreate, callback) {
      let postBody = createUserAddressRequestCreate;
      // verify the required parameter 'createUserAddressRequestCreate' is set
      if (createUserAddressRequestCreate === undefined || createUserAddressRequestCreate === null) {
        throw new Error("Missing the required parameter 'createUserAddressRequestCreate' when calling appUserAddressControllerCreateModel");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Authorization'];
      let contentTypes = ['application/json'];
      let accepts = ['*/*'];
      let returnType = BaseResponseUserAddressInfoDetails;
      return this.apiClient.callApi(
        '/api/v1/app/user-address/create', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the appUserAddressControllerDeleteModelById operation.
     * @callback module:api/AppUserAddressControllerApi~appUserAddressControllerDeleteModelByIdCallback
     * @param {String} error Error message, if any.
     * @param {module:model/SuccessResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {Number} id 
     * @param {module:api/AppUserAddressControllerApi~appUserAddressControllerDeleteModelByIdCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/SuccessResponse}
     */
    appUserAddressControllerDeleteModelById(id, callback) {
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling appUserAddressControllerDeleteModelById");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Authorization'];
      let contentTypes = [];
      let accepts = ['*/*'];
      let returnType = SuccessResponse;
      return this.apiClient.callApi(
        '/api/v1/app/user-address/{id}/delete', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the appUserAddressControllerGetInfoListWithFilter operation.
     * @callback module:api/AppUserAddressControllerApi~appUserAddressControllerGetInfoListWithFilterCallback
     * @param {String} error Error message, if any.
     * @param {module:model/BaseResponseListUserAddressInfoInfo} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {module:api/AppUserAddressControllerApi~appUserAddressControllerGetInfoListWithFilterCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/BaseResponseListUserAddressInfoInfo}
     */
    appUserAddressControllerGetInfoListWithFilter(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Authorization'];
      let contentTypes = [];
      let accepts = ['*/*'];
      let returnType = BaseResponseListUserAddressInfoInfo;
      return this.apiClient.callApi(
        '/api/v1/app/user-address/list', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the appUserAddressControllerUpdateModel operation.
     * @callback module:api/AppUserAddressControllerApi~appUserAddressControllerUpdateModelCallback
     * @param {String} error Error message, if any.
     * @param {module:model/BaseResponseUserAddressInfoDetails} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {module:model/UpdateUserAddressRequestUpdate} updateUserAddressRequestUpdate 
     * @param {module:api/AppUserAddressControllerApi~appUserAddressControllerUpdateModelCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/BaseResponseUserAddressInfoDetails}
     */
    appUserAddressControllerUpdateModel(updateUserAddressRequestUpdate, callback) {
      let postBody = updateUserAddressRequestUpdate;
      // verify the required parameter 'updateUserAddressRequestUpdate' is set
      if (updateUserAddressRequestUpdate === undefined || updateUserAddressRequestUpdate === null) {
        throw new Error("Missing the required parameter 'updateUserAddressRequestUpdate' when calling appUserAddressControllerUpdateModel");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Authorization'];
      let contentTypes = ['application/json'];
      let accepts = ['*/*'];
      let returnType = BaseResponseUserAddressInfoDetails;
      return this.apiClient.callApi(
        '/api/v1/app/user-address/update', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
