/**
 * SWD_392 Auction API
 * API documentation of SWD_392 Auction v1.0.0
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import BaseResponseListSkuInfoInfo from '../model/BaseResponseListSkuInfoInfo';
import BaseResponseObject from '../model/BaseResponseObject';
import BaseResponseSkuInfoDetails from '../model/BaseResponseSkuInfoDetails';
import CreateSkuRequestCreate from '../model/CreateSkuRequestCreate';
import ErrorResponse from '../model/ErrorResponse';
import UpdateSkuRequestUpdate from '../model/UpdateSkuRequestUpdate';

/**
* SystemSkuController service.
* @module api/SystemSkuControllerApi
* @version 1.0.0
*/
export default class SystemSkuControllerApi {

    /**
    * Constructs a new SystemSkuControllerApi. 
    * @alias module:api/SystemSkuControllerApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the appSkuControllerCreateModel operation.
     * @callback module:api/SystemSkuControllerApi~appSkuControllerCreateModelCallback
     * @param {String} error Error message, if any.
     * @param {module:model/BaseResponseSkuInfoDetails} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {module:model/CreateSkuRequestCreate} createSkuRequestCreate 
     * @param {module:api/SystemSkuControllerApi~appSkuControllerCreateModelCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/BaseResponseSkuInfoDetails}
     */
    appSkuControllerCreateModel(createSkuRequestCreate, callback) {
      let postBody = createSkuRequestCreate;
      // verify the required parameter 'createSkuRequestCreate' is set
      if (createSkuRequestCreate === undefined || createSkuRequestCreate === null) {
        throw new Error("Missing the required parameter 'createSkuRequestCreate' when calling appSkuControllerCreateModel");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Authorization'];
      let contentTypes = ['application/json'];
      let accepts = ['*/*'];
      let returnType = BaseResponseSkuInfoDetails;
      return this.apiClient.callApi(
        '/api/v1/app/product-sku/create', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the appSkuControllerDeleteModelById operation.
     * @callback module:api/SystemSkuControllerApi~appSkuControllerDeleteModelByIdCallback
     * @param {String} error Error message, if any.
     * @param {module:model/BaseResponseObject} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {String} id 
     * @param {module:api/SystemSkuControllerApi~appSkuControllerDeleteModelByIdCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/BaseResponseObject}
     */
    appSkuControllerDeleteModelById(id, callback) {
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling appSkuControllerDeleteModelById");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Authorization'];
      let contentTypes = [];
      let accepts = ['*/*'];
      let returnType = BaseResponseObject;
      return this.apiClient.callApi(
        '/api/v1/app/product-sku/{id}/delete', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the appSkuControllerGetInfoListWithFilter operation.
     * @callback module:api/SystemSkuControllerApi~appSkuControllerGetInfoListWithFilterCallback
     * @param {String} error Error message, if any.
     * @param {module:model/BaseResponseListSkuInfoInfo} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {Number} productId 
     * @param {module:api/SystemSkuControllerApi~appSkuControllerGetInfoListWithFilterCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/BaseResponseListSkuInfoInfo}
     */
    appSkuControllerGetInfoListWithFilter(productId, callback) {
      let postBody = null;
      // verify the required parameter 'productId' is set
      if (productId === undefined || productId === null) {
        throw new Error("Missing the required parameter 'productId' when calling appSkuControllerGetInfoListWithFilter");
      }

      let pathParams = {
      };
      let queryParams = {
        'productId': productId
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Authorization'];
      let contentTypes = [];
      let accepts = ['*/*'];
      let returnType = BaseResponseListSkuInfoInfo;
      return this.apiClient.callApi(
        '/api/v1/app/product-sku/list', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the appSkuControllerUpdateModel operation.
     * @callback module:api/SystemSkuControllerApi~appSkuControllerUpdateModelCallback
     * @param {String} error Error message, if any.
     * @param {module:model/BaseResponseSkuInfoDetails} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {module:model/UpdateSkuRequestUpdate} updateSkuRequestUpdate 
     * @param {module:api/SystemSkuControllerApi~appSkuControllerUpdateModelCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/BaseResponseSkuInfoDetails}
     */
    appSkuControllerUpdateModel(updateSkuRequestUpdate, callback) {
      let postBody = updateSkuRequestUpdate;
      // verify the required parameter 'updateSkuRequestUpdate' is set
      if (updateSkuRequestUpdate === undefined || updateSkuRequestUpdate === null) {
        throw new Error("Missing the required parameter 'updateSkuRequestUpdate' when calling appSkuControllerUpdateModel");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Authorization'];
      let contentTypes = ['application/json'];
      let accepts = ['*/*'];
      let returnType = BaseResponseSkuInfoDetails;
      return this.apiClient.callApi(
        '/api/v1/app/product-sku/update', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
