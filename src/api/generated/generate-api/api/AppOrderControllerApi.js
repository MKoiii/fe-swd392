/**
 * SWD_392 Auction API
 * API documentation of SWD_392 Auction v1.0.0
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import BasePagingResponseOrderInfoInfo from '../model/BasePagingResponseOrderInfoInfo';
import BaseResponseCreateOrderResponse from '../model/BaseResponseCreateOrderResponse';
import CreateOrderRequest from '../model/CreateOrderRequest';
import ErrorResponse from '../model/ErrorResponse';

/**
* AppOrderController service.
* @module api/AppOrderControllerApi
* @version 1.0.0
*/
export default class AppOrderControllerApi {

    /**
    * Constructs a new AppOrderControllerApi. 
    * @alias module:api/AppOrderControllerApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the appOrderControllerCreateModel operation.
     * @callback module:api/AppOrderControllerApi~appOrderControllerCreateModelCallback
     * @param {String} error Error message, if any.
     * @param {module:model/BaseResponseCreateOrderResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {module:model/CreateOrderRequest} createOrderRequest 
     * @param {module:api/AppOrderControllerApi~appOrderControllerCreateModelCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/BaseResponseCreateOrderResponse}
     */
    appOrderControllerCreateModel(createOrderRequest, callback) {
      let postBody = createOrderRequest;
      // verify the required parameter 'createOrderRequest' is set
      if (createOrderRequest === undefined || createOrderRequest === null) {
        throw new Error("Missing the required parameter 'createOrderRequest' when calling appOrderControllerCreateModel");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Authorization'];
      let contentTypes = ['application/json'];
      let accepts = ['*/*'];
      let returnType = BaseResponseCreateOrderResponse;
      return this.apiClient.callApi(
        '/api/v1/app/order/create', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the appOrderControllerGetInfoPageWithFilter operation.
     * @callback module:api/AppOrderControllerApi~appOrderControllerGetInfoPageWithFilterCallback
     * @param {String} error Error message, if any.
     * @param {module:model/BasePagingResponseOrderInfoInfo} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [status] 
     * @param {String} [id] 
     * @param {String} [productName] 
     * @param {String} [shopName] 
     * @param {String} [userId] 
     * @param {Number} [page = 0)] Zero-based page index (0..N)
     * @param {Number} [size = 20)] The size of the page to be returned
     * @param {Array.<String>} [sort] Sorting criteria in the format: property,(asc|desc). Default sort order is ascending. Multiple sort criteria are supported.
     * @param {module:api/AppOrderControllerApi~appOrderControllerGetInfoPageWithFilterCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/BasePagingResponseOrderInfoInfo}
     */
    appOrderControllerGetInfoPageWithFilter(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'status': opts['status'],
        'id': opts['id'],
        'productName': opts['productName'],
        'shopName': opts['shopName'],
        'userId': opts['userId'],
        'page': opts['page'],
        'size': opts['size'],
        'sort': this.apiClient.buildCollectionParam(opts['sort'], 'multi')
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Authorization'];
      let contentTypes = [];
      let accepts = ['*/*'];
      let returnType = BasePagingResponseOrderInfoInfo;
      return this.apiClient.callApi(
        '/api/v1/app/order/info/page/filter', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the appOrderControllerGetPaymentUrl operation.
     * @callback module:api/AppOrderControllerApi~appOrderControllerGetPaymentUrlCallback
     * @param {String} error Error message, if any.
     * @param {module:model/BaseResponseCreateOrderResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {String} orderId 
     * @param {module:api/AppOrderControllerApi~appOrderControllerGetPaymentUrlCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/BaseResponseCreateOrderResponse}
     */
    appOrderControllerGetPaymentUrl(orderId, callback) {
      let postBody = null;
      // verify the required parameter 'orderId' is set
      if (orderId === undefined || orderId === null) {
        throw new Error("Missing the required parameter 'orderId' when calling appOrderControllerGetPaymentUrl");
      }

      let pathParams = {
        'orderId': orderId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Authorization'];
      let contentTypes = [];
      let accepts = ['*/*'];
      let returnType = BaseResponseCreateOrderResponse;
      return this.apiClient.callApi(
        '/api/v1/app/order/create-payment/{orderId}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
