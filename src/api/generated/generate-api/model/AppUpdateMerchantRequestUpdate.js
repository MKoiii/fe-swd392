/**
 * SWD_392 Auction API
 * API documentation of SWD_392 Auction v1.0.0
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The AppUpdateMerchantRequestUpdate model module.
 * @module model/AppUpdateMerchantRequestUpdate
 * @version 1.0.0
 */
class AppUpdateMerchantRequestUpdate {
    /**
     * Constructs a new <code>AppUpdateMerchantRequestUpdate</code>.
     * @alias module:model/AppUpdateMerchantRequestUpdate
     * @param name {String} 
     * @param phone {String} 
     * @param provinceId {Number} 
     * @param districtId {Number} 
     * @param wardId {Number} 
     * @param addressDetails {String} 
     */
    constructor(name, phone, provinceId, districtId, wardId, addressDetails) { 
        
        AppUpdateMerchantRequestUpdate.initialize(this, name, phone, provinceId, districtId, wardId, addressDetails);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, name, phone, provinceId, districtId, wardId, addressDetails) { 
        obj['name'] = name;
        obj['phone'] = phone;
        obj['provinceId'] = provinceId;
        obj['districtId'] = districtId;
        obj['wardId'] = wardId;
        obj['addressDetails'] = addressDetails;
    }

    /**
     * Constructs a <code>AppUpdateMerchantRequestUpdate</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AppUpdateMerchantRequestUpdate} obj Optional instance to populate.
     * @return {module:model/AppUpdateMerchantRequestUpdate} The populated <code>AppUpdateMerchantRequestUpdate</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AppUpdateMerchantRequestUpdate();

            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('phone')) {
                obj['phone'] = ApiClient.convertToType(data['phone'], 'String');
            }
            if (data.hasOwnProperty('avatar')) {
                obj['avatar'] = ApiClient.convertToType(data['avatar'], 'String');
            }
            if (data.hasOwnProperty('coverImage')) {
                obj['coverImage'] = ApiClient.convertToType(data['coverImage'], 'String');
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('provinceId')) {
                obj['provinceId'] = ApiClient.convertToType(data['provinceId'], 'Number');
            }
            if (data.hasOwnProperty('districtId')) {
                obj['districtId'] = ApiClient.convertToType(data['districtId'], 'Number');
            }
            if (data.hasOwnProperty('wardId')) {
                obj['wardId'] = ApiClient.convertToType(data['wardId'], 'Number');
            }
            if (data.hasOwnProperty('addressDetails')) {
                obj['addressDetails'] = ApiClient.convertToType(data['addressDetails'], 'String');
            }
            if (data.hasOwnProperty('addressNote')) {
                obj['addressNote'] = ApiClient.convertToType(data['addressNote'], 'String');
            }
            if (data.hasOwnProperty('facebook')) {
                obj['facebook'] = ApiClient.convertToType(data['facebook'], 'String');
            }
            if (data.hasOwnProperty('zalo')) {
                obj['zalo'] = ApiClient.convertToType(data['zalo'], 'String');
            }
            if (data.hasOwnProperty('instagram')) {
                obj['instagram'] = ApiClient.convertToType(data['instagram'], 'String');
            }
            if (data.hasOwnProperty('youtube')) {
                obj['youtube'] = ApiClient.convertToType(data['youtube'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AppUpdateMerchantRequestUpdate</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AppUpdateMerchantRequestUpdate</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of AppUpdateMerchantRequestUpdate.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['phone'] && !(typeof data['phone'] === 'string' || data['phone'] instanceof String)) {
            throw new Error("Expected the field `phone` to be a primitive type in the JSON string but got " + data['phone']);
        }
        // ensure the json data is a string
        if (data['avatar'] && !(typeof data['avatar'] === 'string' || data['avatar'] instanceof String)) {
            throw new Error("Expected the field `avatar` to be a primitive type in the JSON string but got " + data['avatar']);
        }
        // ensure the json data is a string
        if (data['coverImage'] && !(typeof data['coverImage'] === 'string' || data['coverImage'] instanceof String)) {
            throw new Error("Expected the field `coverImage` to be a primitive type in the JSON string but got " + data['coverImage']);
        }
        // ensure the json data is a string
        if (data['description'] && !(typeof data['description'] === 'string' || data['description'] instanceof String)) {
            throw new Error("Expected the field `description` to be a primitive type in the JSON string but got " + data['description']);
        }
        // ensure the json data is a string
        if (data['addressDetails'] && !(typeof data['addressDetails'] === 'string' || data['addressDetails'] instanceof String)) {
            throw new Error("Expected the field `addressDetails` to be a primitive type in the JSON string but got " + data['addressDetails']);
        }
        // ensure the json data is a string
        if (data['addressNote'] && !(typeof data['addressNote'] === 'string' || data['addressNote'] instanceof String)) {
            throw new Error("Expected the field `addressNote` to be a primitive type in the JSON string but got " + data['addressNote']);
        }
        // ensure the json data is a string
        if (data['facebook'] && !(typeof data['facebook'] === 'string' || data['facebook'] instanceof String)) {
            throw new Error("Expected the field `facebook` to be a primitive type in the JSON string but got " + data['facebook']);
        }
        // ensure the json data is a string
        if (data['zalo'] && !(typeof data['zalo'] === 'string' || data['zalo'] instanceof String)) {
            throw new Error("Expected the field `zalo` to be a primitive type in the JSON string but got " + data['zalo']);
        }
        // ensure the json data is a string
        if (data['instagram'] && !(typeof data['instagram'] === 'string' || data['instagram'] instanceof String)) {
            throw new Error("Expected the field `instagram` to be a primitive type in the JSON string but got " + data['instagram']);
        }
        // ensure the json data is a string
        if (data['youtube'] && !(typeof data['youtube'] === 'string' || data['youtube'] instanceof String)) {
            throw new Error("Expected the field `youtube` to be a primitive type in the JSON string but got " + data['youtube']);
        }

        return true;
    }


}

AppUpdateMerchantRequestUpdate.RequiredProperties = ["name", "phone", "provinceId", "districtId", "wardId", "addressDetails"];

/**
 * @member {String} name
 */
AppUpdateMerchantRequestUpdate.prototype['name'] = undefined;

/**
 * @member {String} phone
 */
AppUpdateMerchantRequestUpdate.prototype['phone'] = undefined;

/**
 * @member {String} avatar
 */
AppUpdateMerchantRequestUpdate.prototype['avatar'] = undefined;

/**
 * @member {String} coverImage
 */
AppUpdateMerchantRequestUpdate.prototype['coverImage'] = undefined;

/**
 * @member {String} description
 */
AppUpdateMerchantRequestUpdate.prototype['description'] = undefined;

/**
 * @member {Number} provinceId
 */
AppUpdateMerchantRequestUpdate.prototype['provinceId'] = undefined;

/**
 * @member {Number} districtId
 */
AppUpdateMerchantRequestUpdate.prototype['districtId'] = undefined;

/**
 * @member {Number} wardId
 */
AppUpdateMerchantRequestUpdate.prototype['wardId'] = undefined;

/**
 * @member {String} addressDetails
 */
AppUpdateMerchantRequestUpdate.prototype['addressDetails'] = undefined;

/**
 * @member {String} addressNote
 */
AppUpdateMerchantRequestUpdate.prototype['addressNote'] = undefined;

/**
 * @member {String} facebook
 */
AppUpdateMerchantRequestUpdate.prototype['facebook'] = undefined;

/**
 * @member {String} zalo
 */
AppUpdateMerchantRequestUpdate.prototype['zalo'] = undefined;

/**
 * @member {String} instagram
 */
AppUpdateMerchantRequestUpdate.prototype['instagram'] = undefined;

/**
 * @member {String} youtube
 */
AppUpdateMerchantRequestUpdate.prototype['youtube'] = undefined;






export default AppUpdateMerchantRequestUpdate;

