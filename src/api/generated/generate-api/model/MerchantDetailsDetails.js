/**
 * SWD_392 Auction API
 * API documentation of SWD_392 Auction v1.0.0
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import UserDetailsDetails from './UserDetailsDetails';

/**
 * The MerchantDetailsDetails model module.
 * @module model/MerchantDetailsDetails
 * @version 1.0.0
 */
class MerchantDetailsDetails {
    /**
     * Constructs a new <code>MerchantDetailsDetails</code>.
     * @alias module:model/MerchantDetailsDetails
     */
    constructor() { 
        
        MerchantDetailsDetails.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>MerchantDetailsDetails</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/MerchantDetailsDetails} obj Optional instance to populate.
     * @return {module:model/MerchantDetailsDetails} The populated <code>MerchantDetailsDetails</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new MerchantDetailsDetails();

            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'Number');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('phone')) {
                obj['phone'] = ApiClient.convertToType(data['phone'], 'String');
            }
            if (data.hasOwnProperty('avatar')) {
                obj['avatar'] = ApiClient.convertToType(data['avatar'], 'String');
            }
            if (data.hasOwnProperty('coverImage')) {
                obj['coverImage'] = ApiClient.convertToType(data['coverImage'], 'String');
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('provinceId')) {
                obj['provinceId'] = ApiClient.convertToType(data['provinceId'], 'Number');
            }
            if (data.hasOwnProperty('provinceName')) {
                obj['provinceName'] = ApiClient.convertToType(data['provinceName'], 'String');
            }
            if (data.hasOwnProperty('districtId')) {
                obj['districtId'] = ApiClient.convertToType(data['districtId'], 'Number');
            }
            if (data.hasOwnProperty('districtName')) {
                obj['districtName'] = ApiClient.convertToType(data['districtName'], 'String');
            }
            if (data.hasOwnProperty('wardId')) {
                obj['wardId'] = ApiClient.convertToType(data['wardId'], 'Number');
            }
            if (data.hasOwnProperty('wardName')) {
                obj['wardName'] = ApiClient.convertToType(data['wardName'], 'String');
            }
            if (data.hasOwnProperty('addressDetails')) {
                obj['addressDetails'] = ApiClient.convertToType(data['addressDetails'], 'String');
            }
            if (data.hasOwnProperty('addressNote')) {
                obj['addressNote'] = ApiClient.convertToType(data['addressNote'], 'String');
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = ApiClient.convertToType(data['status'], 'String');
            }
            if (data.hasOwnProperty('representativeName')) {
                obj['representativeName'] = ApiClient.convertToType(data['representativeName'], 'String');
            }
            if (data.hasOwnProperty('facebook')) {
                obj['facebook'] = ApiClient.convertToType(data['facebook'], 'String');
            }
            if (data.hasOwnProperty('zalo')) {
                obj['zalo'] = ApiClient.convertToType(data['zalo'], 'String');
            }
            if (data.hasOwnProperty('instagram')) {
                obj['instagram'] = ApiClient.convertToType(data['instagram'], 'String');
            }
            if (data.hasOwnProperty('youtube')) {
                obj['youtube'] = ApiClient.convertToType(data['youtube'], 'String');
            }
            if (data.hasOwnProperty('representativeEmail')) {
                obj['representativeEmail'] = ApiClient.convertToType(data['representativeEmail'], 'String');
            }
            if (data.hasOwnProperty('representativePhone')) {
                obj['representativePhone'] = ApiClient.convertToType(data['representativePhone'], 'String');
            }
            if (data.hasOwnProperty('idFront')) {
                obj['idFront'] = ApiClient.convertToType(data['idFront'], 'String');
            }
            if (data.hasOwnProperty('idBack')) {
                obj['idBack'] = ApiClient.convertToType(data['idBack'], 'String');
            }
            if (data.hasOwnProperty('owner')) {
                obj['owner'] = UserDetailsDetails.constructFromObject(data['owner']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>MerchantDetailsDetails</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>MerchantDetailsDetails</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['phone'] && !(typeof data['phone'] === 'string' || data['phone'] instanceof String)) {
            throw new Error("Expected the field `phone` to be a primitive type in the JSON string but got " + data['phone']);
        }
        // ensure the json data is a string
        if (data['avatar'] && !(typeof data['avatar'] === 'string' || data['avatar'] instanceof String)) {
            throw new Error("Expected the field `avatar` to be a primitive type in the JSON string but got " + data['avatar']);
        }
        // ensure the json data is a string
        if (data['coverImage'] && !(typeof data['coverImage'] === 'string' || data['coverImage'] instanceof String)) {
            throw new Error("Expected the field `coverImage` to be a primitive type in the JSON string but got " + data['coverImage']);
        }
        // ensure the json data is a string
        if (data['description'] && !(typeof data['description'] === 'string' || data['description'] instanceof String)) {
            throw new Error("Expected the field `description` to be a primitive type in the JSON string but got " + data['description']);
        }
        // ensure the json data is a string
        if (data['provinceName'] && !(typeof data['provinceName'] === 'string' || data['provinceName'] instanceof String)) {
            throw new Error("Expected the field `provinceName` to be a primitive type in the JSON string but got " + data['provinceName']);
        }
        // ensure the json data is a string
        if (data['districtName'] && !(typeof data['districtName'] === 'string' || data['districtName'] instanceof String)) {
            throw new Error("Expected the field `districtName` to be a primitive type in the JSON string but got " + data['districtName']);
        }
        // ensure the json data is a string
        if (data['wardName'] && !(typeof data['wardName'] === 'string' || data['wardName'] instanceof String)) {
            throw new Error("Expected the field `wardName` to be a primitive type in the JSON string but got " + data['wardName']);
        }
        // ensure the json data is a string
        if (data['addressDetails'] && !(typeof data['addressDetails'] === 'string' || data['addressDetails'] instanceof String)) {
            throw new Error("Expected the field `addressDetails` to be a primitive type in the JSON string but got " + data['addressDetails']);
        }
        // ensure the json data is a string
        if (data['addressNote'] && !(typeof data['addressNote'] === 'string' || data['addressNote'] instanceof String)) {
            throw new Error("Expected the field `addressNote` to be a primitive type in the JSON string but got " + data['addressNote']);
        }
        // ensure the json data is a string
        if (data['status'] && !(typeof data['status'] === 'string' || data['status'] instanceof String)) {
            throw new Error("Expected the field `status` to be a primitive type in the JSON string but got " + data['status']);
        }
        // ensure the json data is a string
        if (data['representativeName'] && !(typeof data['representativeName'] === 'string' || data['representativeName'] instanceof String)) {
            throw new Error("Expected the field `representativeName` to be a primitive type in the JSON string but got " + data['representativeName']);
        }
        // ensure the json data is a string
        if (data['facebook'] && !(typeof data['facebook'] === 'string' || data['facebook'] instanceof String)) {
            throw new Error("Expected the field `facebook` to be a primitive type in the JSON string but got " + data['facebook']);
        }
        // ensure the json data is a string
        if (data['zalo'] && !(typeof data['zalo'] === 'string' || data['zalo'] instanceof String)) {
            throw new Error("Expected the field `zalo` to be a primitive type in the JSON string but got " + data['zalo']);
        }
        // ensure the json data is a string
        if (data['instagram'] && !(typeof data['instagram'] === 'string' || data['instagram'] instanceof String)) {
            throw new Error("Expected the field `instagram` to be a primitive type in the JSON string but got " + data['instagram']);
        }
        // ensure the json data is a string
        if (data['youtube'] && !(typeof data['youtube'] === 'string' || data['youtube'] instanceof String)) {
            throw new Error("Expected the field `youtube` to be a primitive type in the JSON string but got " + data['youtube']);
        }
        // ensure the json data is a string
        if (data['representativeEmail'] && !(typeof data['representativeEmail'] === 'string' || data['representativeEmail'] instanceof String)) {
            throw new Error("Expected the field `representativeEmail` to be a primitive type in the JSON string but got " + data['representativeEmail']);
        }
        // ensure the json data is a string
        if (data['representativePhone'] && !(typeof data['representativePhone'] === 'string' || data['representativePhone'] instanceof String)) {
            throw new Error("Expected the field `representativePhone` to be a primitive type in the JSON string but got " + data['representativePhone']);
        }
        // ensure the json data is a string
        if (data['idFront'] && !(typeof data['idFront'] === 'string' || data['idFront'] instanceof String)) {
            throw new Error("Expected the field `idFront` to be a primitive type in the JSON string but got " + data['idFront']);
        }
        // ensure the json data is a string
        if (data['idBack'] && !(typeof data['idBack'] === 'string' || data['idBack'] instanceof String)) {
            throw new Error("Expected the field `idBack` to be a primitive type in the JSON string but got " + data['idBack']);
        }
        // validate the optional field `owner`
        if (data['owner']) { // data not null
          UserDetailsDetails.validateJSON(data['owner']);
        }

        return true;
    }


}



/**
 * @member {Number} id
 */
MerchantDetailsDetails.prototype['id'] = undefined;

/**
 * @member {String} name
 */
MerchantDetailsDetails.prototype['name'] = undefined;

/**
 * @member {String} phone
 */
MerchantDetailsDetails.prototype['phone'] = undefined;

/**
 * @member {String} avatar
 */
MerchantDetailsDetails.prototype['avatar'] = undefined;

/**
 * @member {String} coverImage
 */
MerchantDetailsDetails.prototype['coverImage'] = undefined;

/**
 * @member {String} description
 */
MerchantDetailsDetails.prototype['description'] = undefined;

/**
 * @member {Number} provinceId
 */
MerchantDetailsDetails.prototype['provinceId'] = undefined;

/**
 * @member {String} provinceName
 */
MerchantDetailsDetails.prototype['provinceName'] = undefined;

/**
 * @member {Number} districtId
 */
MerchantDetailsDetails.prototype['districtId'] = undefined;

/**
 * @member {String} districtName
 */
MerchantDetailsDetails.prototype['districtName'] = undefined;

/**
 * @member {Number} wardId
 */
MerchantDetailsDetails.prototype['wardId'] = undefined;

/**
 * @member {String} wardName
 */
MerchantDetailsDetails.prototype['wardName'] = undefined;

/**
 * @member {String} addressDetails
 */
MerchantDetailsDetails.prototype['addressDetails'] = undefined;

/**
 * @member {String} addressNote
 */
MerchantDetailsDetails.prototype['addressNote'] = undefined;

/**
 * @member {module:model/MerchantDetailsDetails.StatusEnum} status
 */
MerchantDetailsDetails.prototype['status'] = undefined;

/**
 * @member {String} representativeName
 */
MerchantDetailsDetails.prototype['representativeName'] = undefined;

/**
 * @member {String} facebook
 */
MerchantDetailsDetails.prototype['facebook'] = undefined;

/**
 * @member {String} zalo
 */
MerchantDetailsDetails.prototype['zalo'] = undefined;

/**
 * @member {String} instagram
 */
MerchantDetailsDetails.prototype['instagram'] = undefined;

/**
 * @member {String} youtube
 */
MerchantDetailsDetails.prototype['youtube'] = undefined;

/**
 * @member {String} representativeEmail
 */
MerchantDetailsDetails.prototype['representativeEmail'] = undefined;

/**
 * @member {String} representativePhone
 */
MerchantDetailsDetails.prototype['representativePhone'] = undefined;

/**
 * @member {String} idFront
 */
MerchantDetailsDetails.prototype['idFront'] = undefined;

/**
 * @member {String} idBack
 */
MerchantDetailsDetails.prototype['idBack'] = undefined;

/**
 * @member {module:model/UserDetailsDetails} owner
 */
MerchantDetailsDetails.prototype['owner'] = undefined;





/**
 * Allowed values for the <code>status</code> property.
 * @enum {String}
 * @readonly
 */
MerchantDetailsDetails['StatusEnum'] = {

    /**
     * value: "DRAFT"
     * @const
     */
    "DRAFT": "DRAFT",

    /**
     * value: "IN_REVIEW"
     * @const
     */
    "IN_REVIEW": "IN_REVIEW",

    /**
     * value: "ACTIVE"
     * @const
     */
    "ACTIVE": "ACTIVE",

    /**
     * value: "INACTIVE"
     * @const
     */
    "INACTIVE": "INACTIVE",

    /**
     * value: "LOCK"
     * @const
     */
    "LOCK": "LOCK"
};



export default MerchantDetailsDetails;

