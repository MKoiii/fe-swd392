/**
 * SWD_392 Auction API
 * API documentation of SWD_392 Auction v1.0.0
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The SystemApproveOrRejectMerchantRequest model module.
 * @module model/SystemApproveOrRejectMerchantRequest
 * @version 1.0.0
 */
class SystemApproveOrRejectMerchantRequest {
    /**
     * Constructs a new <code>SystemApproveOrRejectMerchantRequest</code>.
     * @alias module:model/SystemApproveOrRejectMerchantRequest
     * @param merchantId {Number} 
     * @param status {module:model/SystemApproveOrRejectMerchantRequest.StatusEnum} 
     */
    constructor(merchantId, status) { 
        
        SystemApproveOrRejectMerchantRequest.initialize(this, merchantId, status);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, merchantId, status) { 
        obj['merchantId'] = merchantId;
        obj['status'] = status;
    }

    /**
     * Constructs a <code>SystemApproveOrRejectMerchantRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/SystemApproveOrRejectMerchantRequest} obj Optional instance to populate.
     * @return {module:model/SystemApproveOrRejectMerchantRequest} The populated <code>SystemApproveOrRejectMerchantRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new SystemApproveOrRejectMerchantRequest();

            if (data.hasOwnProperty('merchantId')) {
                obj['merchantId'] = ApiClient.convertToType(data['merchantId'], 'Number');
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = ApiClient.convertToType(data['status'], 'String');
            }
            if (data.hasOwnProperty('reason')) {
                obj['reason'] = ApiClient.convertToType(data['reason'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>SystemApproveOrRejectMerchantRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>SystemApproveOrRejectMerchantRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of SystemApproveOrRejectMerchantRequest.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['status'] && !(typeof data['status'] === 'string' || data['status'] instanceof String)) {
            throw new Error("Expected the field `status` to be a primitive type in the JSON string but got " + data['status']);
        }
        // ensure the json data is a string
        if (data['reason'] && !(typeof data['reason'] === 'string' || data['reason'] instanceof String)) {
            throw new Error("Expected the field `reason` to be a primitive type in the JSON string but got " + data['reason']);
        }

        return true;
    }


}

SystemApproveOrRejectMerchantRequest.RequiredProperties = ["merchantId", "status"];

/**
 * @member {Number} merchantId
 */
SystemApproveOrRejectMerchantRequest.prototype['merchantId'] = undefined;

/**
 * @member {module:model/SystemApproveOrRejectMerchantRequest.StatusEnum} status
 */
SystemApproveOrRejectMerchantRequest.prototype['status'] = undefined;

/**
 * @member {String} reason
 */
SystemApproveOrRejectMerchantRequest.prototype['reason'] = undefined;





/**
 * Allowed values for the <code>status</code> property.
 * @enum {String}
 * @readonly
 */
SystemApproveOrRejectMerchantRequest['StatusEnum'] = {

    /**
     * value: "DRAFT"
     * @const
     */
    "DRAFT": "DRAFT",

    /**
     * value: "IN_REVIEW"
     * @const
     */
    "IN_REVIEW": "IN_REVIEW",

    /**
     * value: "ACTIVE"
     * @const
     */
    "ACTIVE": "ACTIVE",

    /**
     * value: "INACTIVE"
     * @const
     */
    "INACTIVE": "INACTIVE",

    /**
     * value: "LOCK"
     * @const
     */
    "LOCK": "LOCK"
};



export default SystemApproveOrRejectMerchantRequest;

